#Использовать gui
#Использовать logos
//#Использовать ParserFileV8i

Перем Форма;
Перем Лог;
Перем КаталогиКэша;
Перем МассивИсключений;

Процедура ПриСозданииОбъекта()
	
	УправляемыйИнтерфейс = Новый УправляемыйИнтерфейс();
	Форма = УправляемыйИнтерфейс.СоздатьФорму();
	
	//# Устанавливаем обработку события ПриОткрытии
	Форма.УстановитьДействие(ЭтотОбъект, "ПриОткрытии", "ПриОткрытииФормы");
	Форма.Показать();
	
КонецПроцедуры

Функция Инициализировать()
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить("ExtCompT");
	
	КаталогиКэша = Новый Массив;
	КаталогиКэша.Добавить("%USERPROFILE%\Local Settings\Application Data\1C\1Cv8");
	КаталогиКэша.Добавить("%USERPROFILE%\Application Data\1C\1Cv8");
	КаталогиКэша.Добавить("%USERPROFILE%\Local Settings\Application Data\1C\1Cv82");
	КаталогиКэша.Добавить("%USERPROFILE%\Application Data\1C\1Cv82");
	
КонецФункции

//# Обработка события первого открытия формы
Процедура ПриОткрытииФормы() Экспорт
	
	//Этот код понадобится если ParserFileV8i изменят, и там можно будет выбрать список баз без групп. 
	//Данные = Новый Соответствие();

	//Парсер = Новый ПарсерСпискаБаз;
	//СписокБаз = Парсер.ПолучитьСписокБаз();
	//Для Каждого База Из СписокБаз Цикл
		//Параметры = База.Значение;
		//ИД = Параметры.ID;
		//Данные.Вставить(ИД, База.Ключ)
	//КонецЦикла;

	Кнопка = Форма.Элементы.Добавить("ОчиститьВсе", "КнопкаФормы", Неопределено);
	Кнопка.Заголовок = "Очистить все";
	Кнопка.УстановитьДействие(ЭтотОбъект, "Нажатие", "ПриНажатииНаКнопку1");

	Данные = ПрочитатьСписокИнформационныхБаз();
	
	ПолеСоСписком1 = Форма.Элементы.Добавить("ПолеСоСписком1", "ПолеФормы", Неопределено);
	ПолеСоСписком1.Заголовок = "Выберите базу";
	ПолеСоСписком1.Вид = Форма.ВидПоляФормы.ПолеСоСписком;
	ПолеСоСписком1.СписокВыбора = Данные;
	ПолеСоСписком1.Значение = "3";
	ПолеСоСписком1.УстановитьДействие(ЭтотОбъект, "ПриИзменении", "ПриИзмененииЗначения");
	
	Форма.Высота = 100;
	
КонецПроцедуры

Процедура ПриНажатииНаКнопку1() Экспорт
	
	ОчиститьКэш();
	Форма.Закрыть();

КонецПроцедуры

Процедура ПриИзмененииЗначения() Экспорт
		
	ID = Форма.Элементы.Найти("ПолеСоСписком1").Значение;
	ОчиститьКэш(ID);
	Форма.Закрыть();
	
КонецПроцедуры

Функция ПрочитатьСписокИнформационныхБаз()
	
	ФайлСпискаБаз = ПолучитьФайлНастроекПоУмолчанию();

	Чтение = Новый ЧтениеТекста(ФайлСпискаБаз);
	СтрокаФайла = Чтение.Прочитать();
	Чтение.Закрыть();

	Данные = Новый Соответствие;
	КоличествоСтрок = СтрЧислоСтрок(СтрокаФайла);
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		Строка = СтрПолучитьСтроку(СтрокаФайла, НомерСтроки);
		Если СтрНачинаетсяС(Строка, "[") И СтрЗаканчиваетсяНа(Строка, "]") Тогда
			
			СтрокаПутьКБазе = СтрПолучитьСтроку(СтрокаФайла, НомерСтроки + 1);
			Параметр = Лев(СтрокаПутьКБазе, 7);
			Если Параметр = "Connect" Тогда
				НаименованиеБазы = Сред(Строка, 2, СтрДлина(Строка) - 2);
				СтрокаИД = СтрПолучитьСтроку(СтрокаФайла, НомерСтроки + 2);
				ИД = Сред(СтрокаИД, 4, СтрДлина(СтрокаИД));
				Данные.Вставить(ИД, НаименованиеБазы);  	
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Данные;
	
КонецФункции

/// Возвращает путь к основному файлу списка баз
//
// Возвращаемое значение:
//	Строка - Путь к файлу пользовательскому ibases.v8i
//
Функция ПолучитьФайлНастроекПоУмолчанию() Экспорт
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindows = Найти(ВРег(СистемнаяИнформация.ВерсияОС), "WINDOWS") > 0;
	Если НЕ ЭтоWindows Тогда
		ЗначениеПеременной = ПолучитьПеременнуюСреды(ВРег("HOME"));
		ФайлСпискаБаз = Новый Файл(ОбъединитьПути(ЗначениеПеременной, ".1C/1cestart/ibases.v8i")).ПолноеИмя;
		Возврат ФайлСпискаБаз;
	Иначе
		Возврат ОбъединитьПути(ПолучитьПеременнуюСреды(ВРег("USERPROFILE")),
			"appdata\roaming\1c\1cestart\ibases.v8i");
	КонецЕсли;
КонецФункции // ПолучитьФайлНастроекПоУмолчанию() Экспорт

// Удаляет найденные по маскам файлы.
//
// Параметры:
//  ID				 - Строка - Имя папки базы.	
//
Процедура ОчиститьКэш(ID = Неопределено)
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИмяПапкиПользователя = ПолучитьПеременнуюСреды("USERPROFILE");
	
	Для Каждого КаталогКэша Из КаталогиКэша Цикл
		
		Путь = СтрЗаменить(КаталогКэша, "%USERPROFILE%", ИмяПапкиПользователя);
		Если ID <> Неопределено Тогда
			Путь = ОбъединитьПути(Путь, ID);
		КонецЕсли;
		
		Лог.Информация("----------------------------------------------------------------------");
		Лог.Информация(СтрШаблон(НСтр("ru = 'Обработка каталога %1.'"), Путь));
		Лог.Информация("----------------------------------------------------------------------");
		
		КаталогОбъект = Новый Файл(Путь);
		Если НЕ КаталогОбъект.Существует() Тогда
			Лог.Ошибка(НСтр("ru = 'Каталог не найден.'"));
			Продолжить;
		КонецЕсли;
		
		МассивФайлов = НайтиФайлы(Путь, "*", Ложь); 
		Для Каждого НайденныйФайл Из МассивФайлов Цикл
			Если НайденныйФайл.ЭтоКаталог() 
				И МассивИсключений.Найти(НайденныйФайл.Имя) = Неопределено Тогда
				Попытка
					УдалитьФайлы(НайденныйФайл.ПолноеИмя);
				Исключение
					Лог.Ошибка(СтрШаблон(НСтр("ru = 'Не удалось удалить каталог %1:
					|%2'"), НайденныйФайл.Имя, ИнформацияОбОшибке()));
					Продолжить;
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.app.cleaner");
Инициализировать();
Сообщить("Работа завершена");